# ========================
# 基础配置
# ========================

# 设置前缀键为 Ctrl+g
unbind C-b                  # 解绑默认前缀 Ctrl+b
set -g prefix C-g           # 设置新前缀为 Ctrl+g
bind C-g send-prefix        # 允许连续按两次前缀键发送到应用程序

# ========================
# 通用设置
# ========================
set -g mouse on              # 启用鼠标支持，允许使用鼠标选择面板、窗口等
set -g base-index         1  # 设置窗口的起始下标为1，更符合人类习惯
set -g pane-base-index    1  # 设置面板的起始下标为1，更符合人类习惯
set -g automatic-rename off    # 禁止自动重命名窗口，保持窗口名称稳定
set -g default-terminal "tmux-256color" # 设置默认终端类型为256色，支持更多颜色
set -ga terminal-features "*:RGB"       # 启用终端的RGB颜色支持，显示更丰富的颜色

# ========================
# 界面主题配置
# ========================
# 状态栏设置
set -g status-interval 1               # 状态栏刷新间隔（秒），控制状态栏更新频率
set -g status-position top             # 状态栏显示在顶部，可以设置为 bottom 显示在底部
set -g status-justify left             # 状态栏左对齐，可以设置为 right 或 centre
setw -g monitor-activity on            # 非活动窗口有更新时显示提示，方便监控后台任务

# ========================
# 快捷键绑定
# ========================

# 通用快捷键
bind r source-file ~/.tmux.conf \; display "Config reloaded"  # 重新加载配置，方便修改后生效
bind -r Space resize-pane -Z  # 空格键缩放当前面板，最大化当前面板

# 面板操作
unbind '"'
bind - splitw -v -c '#{pane_current_path}'  # 垂直分割（使用 - 键），并在当前路径打开
unbind %
bind \\ splitw -h -c '#{pane_current_path}' # 水平分割（使用 \ 键），并在当前路径打开

# 面板调整快捷键（使用 Ctrl+方向键）
bind -r C-k resizep -U 5  # 向上调整面板大小，每次调整5个单位
bind -r C-j resizep -D 5  # 向下调整面板大小，每次调整5个单位
bind -r C-h resizep -L 5  # 向左调整面板大小，每次调整5个单位
bind -r C-l resizep -R 5  # 向右调整面板大小，每次调整5个单位

# 面板关闭确认
bind x confirm-before -p "kill current panes? (y/n)" "kill-pane"  # 询问是否关闭当前面板，防止误操作
bind X confirm-before -p "kill other panes? (y/n)" "kill-pane -a" # 询问是否关闭其他面板，防止误操作

# 智能面板切换（兼容 Vim）
# 判断当前面板是否运行 Vim
is_vim="ps -o state= -o command= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'  # 如果是 Vim，则发送 C-h，否则切换到左侧面板
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'  # 如果是 Vim，则发送 C-j，否则切换到下方面板
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'  # 如果是 Vim，则发送 C-k，否则切换到上方面板
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'  # 如果是 Vim，则发送 C-l，否则切换到右侧面板
bind-key -T copy-mode-vi 'C-h' select-pane -L # 在复制模式下，C-h 切换到左侧面板
bind-key -T copy-mode-vi 'C-j' select-pane -D # 在复制模式下，C-j 切换到下方面板
bind-key -T copy-mode-vi 'C-k' select-pane -U # 在复制模式下，C-k 切换到上方面板
bind-key -T copy-mode-vi 'C-l' select-pane -R # 在复制模式下，C-l 切换到右侧面板

# 窗口管理
bind c new-window                      # 创建新窗口
bind C new-window -c "#{pane_current_path}"  # 在当前路径创建新窗口
bind k confirm-before "kill-window"    # 确认关闭当前窗口
bind K confirm-before "kill-window -a" # 确认关闭其他窗口
bind -n S-Left previous-window         # Shift+Left 切换到上一个窗口
bind -n S-Right next-window            # Shift+Right 切换到下一个窗口
bind -n M-Left swap-window -t -1\; select-window -t -1  # 向前移动窗口
bind -n M-Right swap-window -t +1\; select-window -t +1 # 向后移动窗口
bind e command-prompt -N -p "Select Window: " "if-shell -F '%1' 'selectw -t %1' 'display-message -d 2000 \"Please Input Window Index\"'" # 选择window
bind -r Tab last-window                                                 # 回到最近的window

# 会话管理
bind C-q confirm-before -p "kill current session #S? (y/n)" "kill-session"                          # 询问是否删除当前session
bind-key o command-prompt -p "Enter new session name:" "new-session -s '%%'; switch-client -t '%%'" # 创建新的session

# ========================
# 复制粘贴配置
# ========================
# Vi 风格复制模式
bind Escape copy-mode                          # 进入复制模式
bind -T copy-mode-vi v send-keys -X begin-selection  # 开始选择
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'clipboard-provider copy'  # 复制到剪贴板
bind p run "tmux set-buffer \"$(clipboard-provider paste)\"; tmux paste-buffer -p"  # 从剪贴板粘贴


# ========================
# 高级功能
# ========================

#嵌套会话支持（按 F12 切换模式）
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set window-status-style "fg=#110000,bg=#001100" \;\
  set window-status-current-format "│ #I:#W#F " \;\
  set window-status-current-style "fg=#110000,bg=#001100" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u window-status-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# ========================
# 插件管理
# ========================
set -g @plugin 'tmux-plugins/tpm'               # 插件管理器，用于安装、更新和管理插件
set -g @plugin 'tmux-plugins/tmux-sensible'     # 通用tmux设置，提供一些常用的默认设置
set -g @plugin 'tmux-plugins/tmux-copycat'      # 增强复制功能，提供更多复制选项
set -g @plugin 'tmux-plugins/tmux-resurrect'    # 会话持久化，保存和恢复 tmux 会话
set -g @plugin 'tmux-plugins/tmux-continuum'    # 自动保存会话，定期自动保存 tmux 会话
set -g @plugin 'tmux-plugins/tmux-cpu'          # 显示系统信息，在状态栏显示 CPU 使用率
set -g @plugin 'doodleEsc/tmux-gruvbox'         # 使用gruvbox主题，美化 tmux 界面
set -g @plugin 'doodleEsc/tmux-network-speed'   # 网络速度显示，在状态栏显示网络上传和下载速度

# ========================
# 插件配置
# ========================
# 网络速度插件配置
set -g @network_speed_interface 'enp4s0,wlp5s0'  # 监控的网卡接口，多个接口用逗号分隔
set -g @network_speed_format '%5.2f'             # 显示格式，控制显示的小数位数
set -g @network_speed_download_color '#[fg=magenta]' # 下载速度颜色
set -g @network_speed_upload_color '#[fg=blue]'     # 上传速度颜色
set -g @network_speed_download_icon '󰛴'        # 下载速度图标
set -g @network_speed_upload_icon '󰛶'          # 上传速度图标

# tmux-cpu配置
# cpu
set -g @cpu_percentage_format "%5.1f%%" # CPU 使用率显示格式
set -g @cpu_medium_thresh "30"         # CPU 使用率中等阈值
set -g @cpu_high_thresh "80"           # CPU 使用率高等阈值
set -g @cpu_low_fg_color "#[fg=green]" # foreground color when cpu is low
set -g @cpu_medium_fg_color "#[fg=yellow, bold]" # foreground color when cpu is medium
set -g @cpu_high_fg_color "#[bg=red, fg=black, bold]" # foreground color when cpu is high

# memory
set -g @ram_percentage_format "%5.1f%%" # 内存使用率显示格式
set -g @ram_medium_thresh "30"         # 内存使用率中等阈值
set -g @ram_high_thresh "80"           # 内存使用率高等阈值
set -g @ram_low_fg_color "#[fg=green]" # foreground color when cpu is low
set -g @ram_medium_fg_color "#[fg=yellow]" # foreground color when cpu is medium
set -g @ram_high_fg_color "#[bg=red, fg=black, bold]" # foreground color when cpu is high

# Gruvbox 主题配置
set -g @tmux-gruvbox 'dark256' # or 'dark256', 'light', 'light256' 选择gruvbox主题风格
set -g @tmux-gruvbox-right-status-x ' #[fg=colour246] #{cpu_fg_color}#{cpu_percentage} #[bg=default,fg=blue]-#[fg=colour246]  #{ram_fg_color}#{ram_percentage}#[bg=default,fg=colour246] ' # 状态栏右侧显示 CPU 和内存信息
set -g @tmux-gruvbox-right-status-y ' #{network_speed} ' # 状态栏右侧显示网络速度信息
set -g @tmux-gruvbox-right-status-z ' #[fg=white]%H:%M:%S' # 状态栏右侧显示时间

# ========================
# 初始化插件管理器
# ========================
run '~/.tmux/plugins/tpm/tpm' # 初始化插件管理器
run-shell ~/.tmux/plugins/tmux-cpu/cpu.tmux # 运行 tmux-cpu 插件，更新状态栏信息
