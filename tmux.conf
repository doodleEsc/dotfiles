# ========================
# 基础配置
# ========================

# 设置前缀键为 Ctrl+g
unbind C-b                  # 解绑默认前缀 Ctrl+b
set -g prefix C-g           # 设置新前缀为 Ctrl+g
bind C-g send-prefix        # 允许连续按两次前缀键发送到应用程序

# ========================
# 通用设置
# ========================
set -g mouse on                 # 启用鼠标支持
set -g mode-keys vi             # vim mode
set -g base-index         1     # 设置窗口的起始下标为1
set -g pane-base-index    1     # 设置面板的起始下标为1
set -g automatic-rename   on    # 禁止自动重命名窗口
set -g renumber-windows   on    # 重新排序number
set -g default-terminal "xterm-256color" # 设置默认终端类型
set -ga terminal-features "*:RGB"       # 颜色支持

# ========================
# 界面主题配置
# ========================
# 状态栏设置
set -g status-interval 1               # 状态栏刷新间隔（秒）
set -g status-position top             # 状态栏显示在顶部
set -g status-justify left             # 状态栏左对齐
setw -g monitor-activity on            # 非活动窗口有更新时显示提示

# ========================
# 快捷键绑定
# ========================

# 通用快捷键
bind r source-file ~/.tmux.conf \; display "Config reloaded"  # 重新加载配置
bind -r Space resize-pane -Z  # 空格键缩放当前面板

# 面板操作
unbind '"'
bind - splitw -v -c '#{pane_current_path}'  # 垂直分割（使用 - 键）
unbind %
bind \\ splitw -h -c '#{pane_current_path}' # 水平分割（使用 \ 键）

# 面板调整快捷键（使用 Ctrl+方向键）
bind -r C-k resizep -U 5  # 向上调整
bind -r C-j resizep -D 5  # 向下调整
bind -r C-h resizep -L 5  # 向左调整
bind -r C-l resizep -R 5  # 向右调整

# 面板关闭确认
bind x confirm-before -p "kill current panes? (y/n)" "kill-pane"  # 询问是否关闭当前面板
bind X confirm-before -p "kill other panes? (y/n)" "kill-pane -a" # 询问是否关闭其他面板

# 智能面板切换（兼容 Vim）
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"
is_vim="ps -o state= -o command= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# 窗口管理
bind c new-window                      # 创建新窗口
bind C new-window -c "#{pane_current_path}"  # 在当前路径创建新窗口
bind k confirm-before "kill-window"    # 确认关闭当前窗口
bind K confirm-before "kill-window -a" # 确认关闭其他窗口
bind -n S-Left previous-window         # Shift+Left 切换到上一个窗口
bind -n S-Right next-window            # Shift+Right 切换到下一个窗口
bind -n M-Left swap-window -t -1\; select-window -t -1  # 向前移动窗口
bind -n M-Right swap-window -t +1\; select-window -t +1 # 向后移动窗口
bind e command-prompt -N -p "Select Window: " "if-shell -F '%1' 'selectw -t %1' 'display-message -d 2000 \"Please Input Window Index\"'" # 选择window
bind -r Tab last-window                                                 # 回到最近的window

# 会话管理
bind C-q confirm-before -p "kill current session #S? (y/n)" "kill-session"                          # 询问是否删除当前session
bind-key o command-prompt -p "Enter new session name:" "new-session -s '%%'; switch-client -t '%%'" # 创建新的session

# ========================
# 复制粘贴配置
# ========================
# Vi 风格复制模式
bind Escape copy-mode                          # 进入复制模式
bind -T copy-mode-vi v send-keys -X begin-selection  # 开始选择
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'clipboard-provider copy'  # 复制到剪贴板
bind p run "tmux set-buffer \"$(clipboard-provider paste)\"; tmux paste-buffer -p"  # 从剪贴板粘贴
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clipboard-provider copy"


# ========================
# 高级功能
# ========================

#嵌套会话支持（按 F12 切换模式）
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set window-status-style "fg=#110000,bg=#001100" \;\
  set window-status-current-format "│ #I:#W#F " \;\
  set window-status-current-style "fg=#110000,bg=#001100" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u window-status-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# ========================
# 插件管理
# ========================
set -g @plugin 'tmux-plugins/tpm'               # 插件管理器
set -g @plugin 'tmux-plugins/tmux-sensible'     # 通用tmux设置
set -g @plugin 'tmux-plugins/tmux-copycat'      # 增强复制功能
set -g @plugin 'tmux-plugins/tmux-resurrect'    # 会话持久化
set -g @plugin 'tmux-plugins/tmux-continuum'    # 自动保存会话
set -g @plugin 'tmux-plugins/tmux-cpu'          # 显示系统信息
set -g @plugin 'doodleEsc/tmux-gruvbox'         # 使用gruvbox主题
set -g @plugin 'doodleEsc/tmux-network-speed'   # 网络速度显示

# ========================
# 插件配置
# ========================
# 网络速度插件配置
set -g @network_speed_interface 'enp4s0,wlp5s0'  # 监控的网卡接口
set -g @network_speed_format '%5.2f'             # 显示格式
set -g @network_speed_download_color '#[fg=magenta]'
set -g @network_speed_upload_color '#[fg=blue]'
set -g @network_speed_download_icon '󰛴'
set -g @network_speed_upload_icon '󰛶'

# tmux-cpu配置
# cpu
set -g @cpu_percentage_format "%5.1f%%"
set -g @cpu_medium_thresh "30"
set -g @cpu_high_thresh "80"
set -g @cpu_low_fg_color "#[fg=green]" # foreground color when cpu is low
set -g @cpu_medium_fg_color "#[fg=yellow, bold]" # foreground color when cpu is medium
set -g @cpu_high_fg_color "#[bg=red, fg=black, bold]" # foreground color when cpu is high

# memory
set -g @ram_percentage_format "%5.1f%%"
set -g @ram_medium_thresh "30"
set -g @ram_high_thresh "80"
set -g @ram_low_fg_color "#[fg=green]" # foreground color when cpu is low
set -g @ram_medium_fg_color "#[fg=yellow]" # foreground color when cpu is medium
set -g @ram_high_fg_color "#[bg=red, fg=black, bold]" # foreground color when cpu is high

# Gruvbox 主题配置
set -g @tmux-gruvbox 'dark256' # or 'dark256', 'light', 'light256'
set -g @tmux-gruvbox-right-status-x ' #[fg=colour246] #{cpu_fg_color}#{cpu_percentage} #[bg=default,fg=blue]-#[fg=colour246]  #{ram_fg_color}#{ram_percentage}#[bg=default,fg=colour246] '
set -g @tmux-gruvbox-right-status-y ' #{network_speed} '
set -g @tmux-gruvbox-right-status-z ' #[fg=white]%H:%M:%S'

# 初始化插件管理器
run '~/.tmux/plugins/tpm/tpm'
run-shell ~/.tmux/plugins/tmux-cpu/cpu.tmux
